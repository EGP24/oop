from contextlib import redirect_stdout
from io import StringIO

from oop_lr01_task_04_03_02.пицца import ПиццаПепперони


class TestЗаказ:
    def test_заказ_init(self, заказ):
        # assert
        assert заказ.заказанные_пиццы == []
        assert заказ.номер_заказа == 1

    def test_заказ_str(self, заказ):
        # assert and act
        assert str(заказ) == 'Заказ №1\n'

    def test_заказ_добавить(self, заказ):
        # arrange
        пицца = ПиццаПепперони()

        # act
        заказ.добавить(пицца)

        # assert
        assert заказ.заказанные_пиццы == [пицца]

    def test_заказ_сумма(self, заказ):
        # arrange
        пицца = ПиццаПепперони()
        заказ.добавить(пицца)
        заказ.добавить(пицца)

        # assert and act
        assert заказ.сумма() == 1100

    def test_заказ_выполнить(self, заказ):
        # arrange
        пицца = ПиццаПепперони()
        заказ.добавить(пицца)
        заказ.добавить(пицца)
        out = StringIO()
        expected = (
            '1. Пипперони\n'
            'Начинаю готовить пицуу Пипперони\n'
            ' - замешиваю тонкое тесто...\n'
            ' - добавляю соус: томатный...\n'
            ' - и, конечно: томаты, колбаса салями, сыр моцарелла, перец чили, чеснок, '
            'сушённый базелик, оливковое масло...\n'
            'Выпекаю пиццу... Готово!\n'
            'Нарезаю на аппетитные кусочки...\n'
            'Упаковываю в фирменную упаковку и готово!\n'
            '2. Пипперони\n'
            'Начинаю готовить пицуу Пипперони\n'
            ' - замешиваю тонкое тесто...\n'
            ' - добавляю соус: томатный...\n'
            ' - и, конечно: томаты, колбаса салями, сыр моцарелла, перец чили, чеснок, '
            'сушённый базелик, оливковое масло...\n'
            'Выпекаю пиццу... Готово!\n'
            'Нарезаю на аппетитные кусочки...\n'
            'Упаковываю в фирменную упаковку и готово!\n'
            'Заказ №1 готов! Приятного аппетита!\n'
        )

        # act
        with redirect_stdout(out):
            заказ.выполнить()

        # assert
        assert out.getvalue() == expected
        assert заказ.заказанные_пиццы == [пицца, пицца]
        assert заказ.номер_заказа == 1
        assert заказ.сумма() == 1100
